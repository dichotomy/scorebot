# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-08-18 00:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sbegame', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_name', models.CharField(max_length=250, verbose_name=b'Game Name')),
                ('game_mode', models.SmallIntegerField(default=0, verbose_name=b'Game Mode')),
                ('game_paused', models.BooleanField(default=False, verbose_name=b'Game Pause')),
                ('game_start', models.DateTimeField(auto_now_add=True, verbose_name=b'Game Start')),
                ('game_finish', models.DateTimeField(blank=True, null=True, verbose_name=b'Game Finish')),
                ('game_options_cool', models.SmallIntegerField(default=300, verbose_name=b'Game Cool Down')),
                ('game_options_flag_percent', models.SmallIntegerField(default=60, verbose_name=b'Game Flag Percentage')),
                ('game_options_ticket_percent', models.SmallIntegerField(default=65, verbose_name=b'Game Ticket Percentage')),
                ('game_host_default_ping_ratio', models.SmallIntegerField(default=50, verbose_name=b'Game Host Pinback Percent')),
                ('game_options_ticket_wait', models.SmallIntegerField(default=180, verbose_name=b'Game Ticket First Hold Time (Sec)')),
            ],
            options={
                'verbose_name': 'SBE Game',
                'verbose_name_plural': 'SBE Games',
            },
        ),
        migrations.CreateModel(
            name='GameCompromise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_start', models.DateTimeField(auto_now_add=True, verbose_name=b'Compromise Start')),
                ('comp_finish', models.DateTimeField(blank=True, null=True, verbose_name=b'Compromise End')),
                ('comp_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbegame.Player')),
            ],
            options={
                'verbose_name': 'SBE Host Compromise',
                'verbose_name_plural': 'SBE Host Compromises',
            },
        ),
        migrations.CreateModel(
            name='GameContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_data', picklefield.fields.PickledObjectField(editable=False)),
                ('content_type', models.CharField(default=b'string', max_length=75, verbose_name=b'Content Type')),
            ],
            options={
                'verbose_name': 'SBE Service Content',
                'verbose_name_plural': 'SBE Service Contents',
            },
        ),
        migrations.CreateModel(
            name='GameDNS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dns_address', models.CharField(max_length=140, verbose_name=b'DNS Server Address')),
            ],
            options={
                'verbose_name': 'SBE DNS Server',
                'verbose_name_plural': 'SBE DNS Servers',
            },
        ),
        migrations.CreateModel(
            name='GameFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag_name', models.CharField(max_length=250, verbose_name=b'Flag Name')),
                ('flag_answer', models.CharField(max_length=500, verbose_name=b'Flag Answer')),
                ('flag_value', models.SmallIntegerField(default=100, verbose_name=b'Flag Value')),
                ('flag_options', models.SmallIntegerField(default=2, verbose_name=b'Flag Options')),
                ('flag_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbegame.Player')),
            ],
            options={
                'verbose_name': 'SBE Game Flag',
                'verbose_name_plural': 'SBE Game Flags',
            },
        ),
        migrations.CreateModel(
            name='GameHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_fqdn', models.CharField(max_length=250, verbose_name=b'Host Name')),
                ('host_status', models.BooleanField(default=False, verbose_name=b'Host Online')),
                ('host_value', models.SmallIntegerField(default=250, verbose_name=b'Host Value')),
                ('host_ping_ratio', models.SmallIntegerField(default=0, verbose_name=b'Host Pingback Percentage')),
                ('host_name', models.CharField(blank=True, max_length=250, null=True, verbose_name=b'Host VM Name')),
                ('host_compromises', models.ManyToManyField(blank=True, to='sbehost.GameCompromise')),
                ('host_flags', models.ManyToManyField(blank=True, to='sbehost.GameFlag')),
                ('host_server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbegame.HostServer')),
            ],
            options={
                'verbose_name': 'SBE Game Host',
                'verbose_name_plural': 'SBE Game Hosts',
            },
        ),
        migrations.CreateModel(
            name='GameMonitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitor_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbehost.Game')),
                ('monitor_hosts', models.ManyToManyField(to='sbehost.GameHost')),
                ('monitor_inst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbegame.MonitorServer')),
            ],
            options={
                'verbose_name': 'SBE Game Monitor',
                'verbose_name_plural': 'SBE Game Monitors',
            },
        ),
        migrations.CreateModel(
            name='GamePlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_score', models.IntegerField(default=0, verbose_name=b'Player Current Score')),
                ('player_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbehost.Game')),
                ('player_inst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbegame.Player')),
            ],
            options={
                'verbose_name': 'SBE Game Player',
                'verbose_name_plural': 'SBE Game Players',
            },
        ),
        migrations.CreateModel(
            name='GameService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_port', models.SmallIntegerField(verbose_name=b'Service Port')),
                ('service_name', models.CharField(max_length=128, verbose_name=b'Service Name')),
                ('service_value', models.SmallIntegerField(default=50, verbose_name=b'Service Value')),
                ('service_status', models.SmallIntegerField(default=0, verbose_name=b'Service Status')),
                ('service_bonus', models.BooleanField(default=False, verbose_name=b'Service is Bonus')),
                ('service_protocol', models.CharField(default=b'tcp', max_length=4, verbose_name=b'Service Protocol')),
                ('service_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbehost.GameContent')),
            ],
            options={
                'verbose_name': 'SBE Service',
                'verbose_name_plural': 'SBE Services',
            },
        ),
        migrations.CreateModel(
            name='GameTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_score_flags', models.IntegerField(default=0, verbose_name=b'Team Score (Flags)')),
                ('team_score_basic', models.IntegerField(default=0, verbose_name=b'Team Score (Uptime)')),
                ('team_score_beacons', models.IntegerField(default=0, verbose_name=b'Team Score (Beans)')),
                ('team_score_tickets', models.IntegerField(default=0, verbose_name=b'Team Score (Tickets)')),
                ('team_dns', models.ManyToManyField(to='sbehost.GameDNS')),
                ('team_flags', models.ManyToManyField(to='sbehost.GameFlag')),
                ('team_hosts', models.ManyToManyField(to='sbehost.GameHost')),
                ('team_inst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbegame.Team')),
                ('team_players', models.ManyToManyField(through='sbehost.GamePlayer', to='sbegame.Player')),
            ],
            options={
                'verbose_name': 'SBE Game Team',
                'verbose_name_plural': 'SBE Game Team',
            },
        ),
        migrations.CreateModel(
            name='GameTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_name', models.CharField(max_length=250, verbose_name=b'Ticket Name')),
                ('ticket_value', models.SmallIntegerField(default=500, verbose_name=b'Ticket Value')),
                ('ticket_expired', models.BooleanField(default=False, verbose_name=b'Ticket Expired')),
                ('ticket_content', models.CharField(max_length=1000, verbose_name=b'Ticket Body Content')),
                ('ticket_expires', models.DateTimeField(blank=True, null=True, verbose_name=b'Ticket Expires')),
                ('ticket_started', models.DateTimeField(blank=True, null=True, verbose_name=b'Ticket Assigned')),
                ('ticket_completed', models.DateTimeField(blank=True, null=True, verbose_name=b'Ticket Completed')),
            ],
            options={
                'verbose_name': 'SBE Ticket',
                'verbose_name_plural': 'SBE Tickets',
            },
        ),
        migrations.AddField(
            model_name='gameteam',
            name='team_tickets',
            field=models.ManyToManyField(to='sbehost.GameTicket'),
        ),
        migrations.AddField(
            model_name='gameplayer',
            name='player_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbehost.GameTeam'),
        ),
        migrations.AddField(
            model_name='gamehost',
            name='host_services',
            field=models.ManyToManyField(to='sbehost.GameService'),
        ),
        migrations.AddField(
            model_name='gamehost',
            name='host_tickets',
            field=models.ManyToManyField(blank=True, to='sbehost.GameTicket'),
        ),
        migrations.AddField(
            model_name='game',
            name='game_monitors',
            field=models.ManyToManyField(through='sbehost.GameMonitor', to='sbegame.MonitorServer'),
        ),
        migrations.AddField(
            model_name='game',
            name='game_offensive',
            field=models.ManyToManyField(through='sbehost.GamePlayer', to='sbegame.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='game_teams',
            field=models.ManyToManyField(to='sbehost.GameTeam'),
        ),
    ]
